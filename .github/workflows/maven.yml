#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    strategy:
      matrix:
        java: [ 8, 17, 21-ea ]
        os: [ 'windows-latest', 'macos-latest', 'ubuntu-latest' ]

    runs-on: ${{ matrix.os }}

    steps:
      - name: Configure Git
        if: matrix.os == 'windows-latest'
        run: |
          git config --global core.longpaths true
      - uses: actions/checkout@v3
      - name: Set up JDK ${{ matrix.java }}
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: ${{ matrix.java }}
      - name: Build with Maven in Windows
        if: matrix.os == 'windows-latest'
        run: |
          ./mvnw --batch-mode --no-transfer-progress '-Dmaven.javadoc.skip=true' clean install
      - name: Build with Maven in Linux or macOS
        if: matrix.os == 'macos-latest' || matrix.os == 'ubuntu-latest'
        run: |
          ./mvnw --batch-mode --no-transfer-progress '-Dmaven.javadoc.skip=true' clean install -Pcheck
      - name: Upload coverage to Codecov
        if: matrix.os == 'ubuntu-latest' && matrix.java == '8'
        uses: codecov/codecov-action@v3
        with:
          file: '**/target/site/jacoco/jacoco.xml'
